apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finopsguard
  namespace: finopsguard
  labels:
    app: finopsguard
  annotations:
    # Nginx ingress controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "50"
    
    # CORS (uncomment if needed)
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    
    # Cert-manager for TLS (uncomment if using cert-manager)
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # AWS ALB ingress controller annotations (alternative to nginx)
    # kubernetes.io/ingress.class: alb
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/healthcheck-path: /healthz
    
    # GCP ingress controller annotations
    # kubernetes.io/ingress.class: "gce"
    # kubernetes.io/ingress.global-static-ip-name: "finopsguard-ip"
spec:
  ingressClassName: nginx
  rules:
  - host: finopsguard.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finopsguard
            port:
              number: 8080
  
  # TLS configuration (uncomment and configure)
  # tls:
  # - hosts:
  #   - finopsguard.example.com
  #   secretName: finopsguard-tls

